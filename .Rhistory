read.csv("C:/Users/abbyg/Desktop/Procesamiento de datos geográficos/FDC.csv")
read.csv("C:/Users/abbyg/Desktop/Procesamiento de datos/FDC.csv")
inp <- read.csv("C:/Users/abbyg/Desktop/Procesamiento de datos/FDC.csv", na.strings = "")
inp <- read.csv("FDC.csv")
read.csv("C:/Users/abbyg/Desktop/Procesamiento de datos/FDC.csv")
inp <- read.csv("C:/Users/abbyg/Desktop/Procesamiento de datos/FDC.csv", na.strings = "")
inp <- read.csv("FDC.csv")
setwd("C:/Users/abbyg/Desktop/Procesamiento de datos/Proyecto")
setwd("C:/Users/abbyg/Desktop/Procesamiento de datos/Proyecto")
library(flexdashboard)
library(raster)
library(rmapshaper)
library(dplyr)
library(sf)
library(DT)
library(plotly)
library(leafem)
library(leaflet)
library(leaflet.extras)
orquideas <-
st_read(
"https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/gbif/orchidaceae-cr-registros.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude",
"Y_POSSIBLE_NAMES=decimalLatitude"
),
quiet = TRUE
)
# Asignar proyecciones
st_crs(orquideas) = 4326
# Capa geespacial de cantones y provincias
cantones <-
st_read("https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ign/delimitacion-territorial-administrativa/cr_cantones_simp_wgs84.geojson",
quiet = TRUE)
provincias <-
st_read("https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ign/delimitacion-territorial-administrativa/cr_provincias_simp_wgs84.geojson",
quiet = TRUE)
# Cruce espacial con la tabla de cantones y provincias, para obtener sus nombres
orquideas <-
orquideas %>%
st_join(cantones["canton"]) %>%
st_join(provincias["provincia"])
# 1. Limpieza
# Conversion de los valores
orquideas <-
orquideas %>%
mutate(coordinateUncertaintyInMeters = as.numeric(coordinateUncertaintyInMeters)) %>%
mutate(eventDate = as.Date(eventDate, "%Y-%m-%d"))
# Limpieza de los valores de alta incertidumbre (<1000)
orquideas <-
orquideas %>%
filter(!is.na(coordinateUncertaintyInMeters) & coordinateUncertaintyInMeters <= 1000)
valueBox(value = nrow(orquideas),
caption = "Registros de presencia",
icon = "fas fa-fan",
color = "#906dbd"
)
input <- orquideas %>%
filter(!is.na(genus) & genus != "") %>%
group_by(genus) %>%
summarise(registros = n())
valueBox(value = nrow(input),
icon = "fas fa-fan",
color = "#bb6dbd")
input2 <- orquideas %>%
filter(!is.na(species) & species != "") %>%
group_by(species) %>%
summarise(registros = n())
valueBox(value = nrow(input2),
icon = "fas fa-fan",
color = "#e087bc")
orquideas %>%
st_drop_geometry() %>%
select(species, eventDate, stateProvince, canton) %>%
datatable(colnames = c(
"Especie",
"Fecha",
"Provincia",
"Cantón"),
options = list(searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json'),
pageLength = 10),
class = 'cell-border stripe'
)
# Especies con mayor cantidad de registros
orq_slice <-
orquideas %>%
st_drop_geometry() %>%
filter(!is.na(species) & species != "") %>%
group_by(species) %>%
summarise(registros = n()) %>%
arrange(desc(registros)) %>%
slice(1:10)
otros <-
orquideas %>%
st_drop_geometry() %>%
filter(!is.na(species) & species != "") %>%
group_by(species) %>%
summarise(registros = n()) %>%
arrange(desc(registros)) %>%
slice(11:232) %>%
group_by(species = as.character("Otros")) %>%
summarise(registros = sum(registros))
visualizacion_orquideas <-
merge(orq_slice, otros, all = TRUE)
# Grafico
plot_ly(visualizacion_orquideas, labels =  ~species, values = ~registros, type = 'pie',
textposition = 'inside',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = "label+value",
showlegend = TRUE,
marker = list(line = list(color = "#ffffff", width = 1))
) %>%
layout(title = 'Registro de orquídeas en Costa Rica') %>%
config(locale = "es")
# 4. Capa leaflet agrupada (clustered)
# Creación de conjunto de datos con la cantidad de especies por provincia
orquideas_especies <-
provincias %>%
st_join(orquideas) %>%
group_by(provincia.x) %>%
summarize(especies = n())
# Paleta de colores
colores_especies <-
colorNumeric(palette = "RdPu",
domain = orquideas_especies$especies,
na.color = "transparent")
# Mapa de registros de presencia
orquideas %>%
select(species,
canton,
stateProvince,
eventDate) %>%
leaflet() %>%
setView(lng = -84.0, lat = 10.0, zoom = 8) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, group = "OpenStreetMap") %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri.WorldGrayCanvas") %>%
addPolygons(
data = orquideas_especies,
fillColor = ~ colores_especies(orquideas_especies$especies),
fillOpacity = 0.3,
stroke = TRUE,
color = "black",
weight = 1,
group = "Registros por provincias"
) %>%
addCircleMarkers(
stroke = F,
radius = 4,
fillColor = "#c90094",
fillOpacity = 1,
popup = paste(
paste(
"<strong>Especie: </strong>",
orquideas$species),
paste(
"<strong>Provincia: </strong>",
orquideas$stateProvince),
paste(
"<strong>Cantón: </strong>",
orquideas$canton),
paste(
"<strong>Fecha: </strong>",
orquideas$eventDate),
sep = '<br/>'
),
clusterOptions = markerClusterOptions(),
group = "Registros de orquideas"
) %>%
addLayersControl(
baseGroups = c("Esri.WorldGrayCanvas", "OpenStreetMap"),
overlayGroups = c("Registros por provincias", "Registros de orquideas")
) %>%
addResetMapButton() %>%
addSearchOSM() %>%
addMouseCoordinates() %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions(imperial = FALSE)) %>%
addMiniMap(
tiles = providers$Esri.WorldGrayCanvas,
position = "bottomleft",
toggleDisplay = TRUE
) %>%
addLegend(
position = "bottomright",
values = orquideas_especies$especies,
pal = colores_especies,
group = "Registros por provincias",
title = "Cantidad de <br>especies de<br>orquideas")
# Capa leaflet raster
# Obtención de la capa de altitud
alt <-
raster::getData(
"worldclim",
var = "alt",
res = 0.5,
lon = -84,
lat = 10
)
# Reproyección de la capa de altitud a WGS84
alt <-
alt %>%
projectRaster(crs = 4326)
# Recorte de la capa de altitud con base en la capa vectorial de provincias
altitud <-
alt %>%
crop(provincias) %>%
mask(provincias)
# Plantilla de raster
raster_plantilla <-
altitud %>%
aggregate(fact = 10)
# Rasterización
orquideas_raster_registros <-
rasterize(orquideas,
raster_plantilla,
field = 1,
fun = "count")
# Visualización de la Rasterización
plot(
orquideas_raster_registros,
ext = extent(280000, 660000, 880000, 1250000),
main = "Cantidad de registros de orquideas",
axes = TRUE
)
plot(provincias$geometry,
add = TRUE)
# Paleta de colores
pal <-
colorNumeric(
c("#fde0dd", "#fcc5c0", "#fa9fb5", "#c51b8a", "#ae017e", "#7a0177"),
values(orquideas_raster_registros),
na.color = "transparent"
)
# Mapa de registros de presencia
leaflet() %>%
setView(lng = -84.0, lat = 10.0, zoom = 8) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik, group = "OpenStreetMap") %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri.WorldGrayCanvas") %>%
addTiles(urlTemplate = "https://mts1.google.com/vt/lyrs=s&hl=en&src=app&x={x}&y={y}&z={z}&s=G", attribution = 'Google', group = "Google") %>%
addPolygons(
data = provincias,
fillColor = FALSE,
fillOpacity = 0,
stroke = TRUE,
color = "black",
weight = 1,
group = "Delimitación provincial"
) %>%
addRasterImage(
orquideas_raster_registros,
colors = pal,
opacity = 1,
group = "Registros de orquídeas"
) %>%
addLayersControl(
baseGroups = c("Esri.WorldGrayCanvas", "OpenStreetMap", "Google"),
overlayGroups = c("Delimitación provincial", "Registros de orquídeas")
) %>%
addResetMapButton() %>%
addSearchOSM() %>%
addMouseCoordinates() %>%
addScaleBar(position = "bottomleft", options = scaleBarOptions(imperial = FALSE)) %>%
addMiniMap(
tiles = providers$Esri.WorldGrayCanvas,
position = "bottomleft",
toggleDisplay = TRUE
) %>%
addLegend(
pal = pal,
values = values(orquideas_raster_registros),
position = "bottomright",
title = "Cantidad de <br>especies<br>por celda",
group = "Registros-Orquideas"
)
